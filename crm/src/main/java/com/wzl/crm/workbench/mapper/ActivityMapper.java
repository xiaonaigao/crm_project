package com.wzl.crm.workbench.mapper;

import com.wzl.crm.workbench.domain.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 09 19:27:50 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 09 19:27:50 CST 2023
     */
    int insert(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 09 19:27:50 CST 2023
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 09 19:27:50 CST 2023
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 09 19:27:50 CST 2023
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 09 19:27:50 CST 2023
     */
    int updateByPrimaryKey(Activity record);

    /**
     * 创建市场活动
     */
    int insertActivity(Activity activity);

    /**
     * 查询市场活动的列表
     */
    List<Activity> selectActivityByConditionForPage(Map<String,Object> map);

    /**
     * 查询市场活动的条数
     */
    int selectCountOfActivityByCondition(Map<String,Object> map);

    /**
     *根据id数组批量删除
     */
    int deleteActivityByIds(String[] id);

    /**
     * 根据id查询市场活动
     */
    Activity selectActivityById(String id);

    /**
     * 根据id修改市场活动
     */
    int updateActivity(Activity activity);

    /**
     * 批量导出
     */
    List<Activity> selectAllActivities();

    /**
     * 选择导出
     */
    List<Activity> selectActivitiesByids(String[] id);

    /**
     *批量插入
     */
    int insertActivityByList(List<Activity> activityList);

    /**
     * 点击名称，查看市场详细
     */
    Activity selectActivityForDetailById(String id);

    /**
     * 关联市场活动1：根据线索id,查询该线索下关联的市场活动
     */
    List<Activity> selectActivityForDetailByClueId(String clueId);
    /**
     * 关联市场活动2：根据线索id,查询该线索下关联的市场活动
     */
    List<Activity> selectActivityForDetailByNameAndClueId(Map<String,Object> map);

    /**
     * 线索转换：根据活动name和线索id，查询关联的市场
     */
    List<Activity> selectActivityForConvertByNameClueId(Map<String,Object> map);

}